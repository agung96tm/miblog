definitions:
  dto.BlogPost:
    properties:
      body:
        type: string
      id:
        type: integer
      title:
        type: string
      user:
        $ref: '#/definitions/dto.BlogUser'
    type: object
  dto.BlogPostCreateRequest:
    properties:
      body:
        minLength: 10
        type: string
      title:
        maxLength: 200
        minLength: 10
        type: string
    required:
    - body
    - title
    type: object
  dto.BlogPostPagination:
    properties:
      list:
        items:
          $ref: '#/definitions/dto.BlogPost'
        type: array
      pagination:
        $ref: '#/definitions/dto.Pagination'
    type: object
  dto.BlogUser:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  dto.LoginResponse:
    properties:
      token:
        type: string
    type: object
  dto.MePasswordRequest:
    properties:
      confirm_password:
        maxLength: 20
        minLength: 8
        type: string
      new_password:
        maxLength: 20
        minLength: 8
        type: string
      old_password:
        maxLength: 20
        minLength: 8
        type: string
    required:
    - confirm_password
    - new_password
    - old_password
    type: object
  dto.MeResponse:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
  dto.MeUpdateRequest:
    properties:
      name:
        type: string
    type: object
  dto.Pagination:
    properties:
      current:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      name:
        maxLength: 20
        minLength: 3
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  dto.RegisterResponse:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
  response.Response:
    properties:
      data: {}
      message: {}
    type: object
  response.ValidationError:
    properties:
      field:
        type: string
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /blog_posts:
    get:
      consumes:
      - application/json
      description: Get Pagination and Several Posts
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.BlogPostPagination'
              type: object
      summary: Get Pagination and Several Posts
      tags:
      - blog
    post:
      consumes:
      - application/json
      description: Create a Post
      produces:
      - application/json
      responses:
        "201":
          description: created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.BlogPostCreateRequest'
              type: object
      summary: Create a Post
      tags:
      - blog
  /blog_posts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Post
      produces:
      - application/json
      responses:
        "204":
          description: no content
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete a Post
      tags:
      - blog
    get:
      consumes:
      - application/json
      description: Get detail a post
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.BlogPost'
              type: object
      summary: Get detail a post
      tags:
      - blog
    patch:
      consumes:
      - application/json
      description: Update a Post
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.BlogPost'
              type: object
      summary: Update a Post
      tags:
      - blog
  /login:
    post:
      consumes:
      - application/json
      description: Login user and get response JWT Token
      parameters:
      - description: Post
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.LoginResponse'
              type: object
        "400":
          description: bad request
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    items:
                      $ref: '#/definitions/response.ValidationError'
                    type: array
                  type: array
              type: object
      summary: Login User
      tags:
      - auth
  /me:
    get:
      consumes:
      - application/json
      description: Get data Logged-in user
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.MeResponse'
              type: object
      summary: Get data Logged-in user
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: Update data Logged-in user
      parameters:
      - description: Post
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.MeUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.MeResponse'
              type: object
      summary: Update data Logged-in user
      tags:
      - user
  /me/password:
    post:
      consumes:
      - application/json
      description: Get data Logged-in user
      parameters:
      - description: Post
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.MePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get data Logged-in user
      tags:
      - user
  /register:
    post:
      consumes:
      - application/json
      description: register a new user
      parameters:
      - description: Post
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.RegisterResponse'
              type: object
        "400":
          description: bad request
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    items:
                      $ref: '#/definitions/response.ValidationError'
                    type: array
                  type: array
              type: object
      summary: Register a new User
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
