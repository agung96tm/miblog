definitions:
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.LoginResponse:
    properties:
      token:
        type: string
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  dto.RegisterResponse:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
  response.Response:
    properties:
      data: {}
      message: {}
    type: object
  response.ValidationError:
    properties:
      field:
        type: string
      message:
        type: string
    type: object
info:
  contact:
    email: agung.96tm@gmail.com
    name: Agung Yuliyanto
  description: Miblog API Endpoint.
  termsOfService: http://swagger.io/terms/
  title: Miblog API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login user and get response JWT Token
      parameters:
      - description: Post
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.LoginResponse'
              type: object
        "400":
          description: bad request
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    items:
                      $ref: '#/definitions/response.ValidationError'
                    type: array
                  type: array
              type: object
      summary: Login User
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: register a new user
      parameters:
      - description: Post
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.RegisterResponse'
              type: object
        "400":
          description: bad request
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    items:
                      $ref: '#/definitions/response.ValidationError'
                    type: array
                  type: array
              type: object
      summary: Register a new User
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
